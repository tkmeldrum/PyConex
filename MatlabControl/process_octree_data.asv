% Matlab code for tilt/tip table, W&M
% TKM, June 2021
%
% This code (1) generates the txt file with the positions for the
% tilt/table input, (2) reads the txt file that contains the actual
% positions used during acquisition, and (3) processes the Kea data to
% interpret the tilt/tip files.

clear
clc
close all

% user defined parameters
params.gamma = 42.577;
params.G = 23.87;
params.zf = 4;

write_out = 1; %write octree data output file?
%octree_out.txt, columns are:
%index, centroid, tilt, tip, max(SI), max(dSI)

%choose directory containing output_positions.txt, stamps.txt, and
%input_positions.txt data files
readdir = [uigetdir(pwd,'Choose directory with output data.'),filesep];

% main_title = 'test';
% showfigs = 0;
% make_next_octree = 0;

% read files
[positions_data,tilts,tips,params,input_pos_data,time_data] = read_tilttip_text_files(readdir,params);

% process all CPMGs, perform FT, find SI and d(SI)/dz for optimum peak
% selection

[data,SI,dSI] = read_octreeCPMG_series(readdir,params);

SI.best_data = positions_data(SI.bestPos,:);
dSI.best_data = positions_data(dSI.bestPos,:);
out_data = [positions_data max(data.SI)' max(data.dSI)'];

%% write text data out

writedir = uigetdir(pwd,'Choose directory to write new data.');

fileID = fopen([writedir,'octree_out.txt'],'w');
fprintf(fileID,  '%u, %f, %f, %f, %f, %f\n', out_data' );
fclose(fileID);

%%
% [rowsout, colsout] = prep_for_subplot(nPos_in);
% SI.all_pks = reshape(SI.pks,numel(tilts),numel(tips));
% dSI.all_widths = reshape(dSI.widths,numel(tilts),numel(tips));
pp = figure(5);
% subplot(1,2,1)
surf(tips,tilts,all_pks); %,'FaceColor','none')
shading interp
view([0 90])
xlabel('tips [um]')
ylabel('tilts [um]')

% subplot(1,2,2)
% surf(tips,tilts,all_pks./all_widths)
% shading flat
% view([0 90])
% xlabel('tips [um]')
% ylabel('tilts [um]')

pubgraph(pp)

%%
if showfigs == 1
    hh = figure(1);
    for ii = 1:nPos_in
        subplot(rowsout,colsout,ii)
        if ii == bestPos
            plot(z,int_spatial(:,ii)','-r');
        else
            plot(z,int_spatial(:,ii)');
        end
    end
    pubgraph(hh)

    gg = figure(2);
    for ii = 1:nPos_in
        subplot(rowsout,colsout,ii)
        if ii == bestPos
            plot(dz,dSA(:,ii),'-r');
        else
            plot(dz,dSA(:,ii));
        end
    end
    pubgraph(gg)

    mm = figure(3);
    subplot(1,2,1)
    plot(z,int_spatial(:,bestPos),'-r');
    subplot(1,2,2)
    plot(dz,dSA(:,bestPos),'-r');
    pubgraph(mm)

    ll = figure(4);
    plot(diff(time_data))
    ylabel('time between position [s]')
    pubgraph(ll)
end

%% make next octree

if make_next_octree == 1
    centroid_pos = positions_data(bestPos,2);
    tilt_center = positions_data(bestPos,3);
    tip_center = positions_data(bestPos,4);

    dtilt = (tilts(2)-tilts(1))/2;
    dtip = (tips(2)-tips(1))/2;

    filedir = [filedir(1:end-2),num2str(str2num(filedir(end-1))+1),'\'];

    tilt_vals = [tilt_center-dtilt tilt_center tilt_center+dtilt];
    tip_vals = [tip_center-dtip tip_center tip_center+dtip];

    nPos_out = write_input_positions(tilt_vals,tip_vals,centroid_pos,filedir);
end
